#include <stdio.h>
#include <stdlib.h>
#define TAM 20

struct pilha{
    int Item[TAM];
    int Topo;
};
typedef struct pilha PILHA;

void PILHA_Inicia(PILHA *p){
    p->Topo = -1;
}

int PILHA_Vazia(PILHA *p){
    if(p->Topo == -1){
        return 1;
    }
    else{
        return 0;
    }
}

int PILHA_Cheia(PILHA *p){
    if(p->Topo == TAM-1){
        return 1;
    }
    else{
        return 0;
    }
}

void PUSH (PILHA *p, int x){
    if(PILHA_Cheia(p) == 1){
        printf("Pilha Cheia");
    }
    else {
        p->Topo++;
        p->Item[p->Topo] = x;
    }
}

int POP(PILHA *p){
    int aux;
    if(PILHA_Vazia(p) == 1){
        printf("Pilha Vazia");
    }
    else{
        aux = p->Item[p->Topo];
        p->Topo--;
        return aux;
    }
}

int main(){
    PILHA *p = (PILHA*)malloc(sizeof(PILHA));
    PILHA_Inicia(p);

    PUSH(p, 1);
    PUSH(p, 2);
    PUSH(p, 3);

    int i;

    i = POP(p);
    printf("\n SAIU: %d", i);

    return 0;
}